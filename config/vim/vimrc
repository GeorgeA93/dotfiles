set nocompatible
set encoding=utf-8
filetype plugin on
set number " line numbers
set clipboard=unnamed
set visualbell " turn that bell off
syntax on " Give me highlighting
set autoindent " indents plz
set smartindent
set smarttab
set shiftwidth=2
set autoread " reload files outside of vim
set softtabstop=2
set tabstop=2
set expandtab
set mouse=a " mouse and scrolling plz
set backspace=indent,eol,start
set scrolloff=3
set ignorecase " ignore case in searches
set smartcase " unless caps are in the search
set incsearch " search while composing regex
set autowrite " always write
set autowriteall
set nobackup " don't write junk files
set foldenable
set foldmethod=indent
set foldlevelstart=99 " Unfold everything when opening file
set foldlevel=100
set splitbelow " open new splits to the right and bottom
set splitright
set hlsearch
set guioptions= " hide scroll bars
set directory=$DOTFILES/config/vim/swapfiles// " Change swapfile location for out of wd
set timeoutlen=1000 ttimeoutlen=0
set lazyredraw
set wrap linebreak nolist

" Change leader to Space
let g:mapleader = "\<Space>"

" fast save
nmap <leader>w :w!<cr>

" fast close buffer
map <leader>bd :Bdelete<cr>

" close all buffers
map <leader>ba :bufdo :Bdelete<cr>

" Cycle through buffers
nnoremap <C-M> :bnext<CR>
nnoremap <C-P> :bprev<CR>

" scroll the viewport faster
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>

" copy whole file
nnoremap <leader>ya :%y<CR>

" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

map <C-w>j :res +5<CR>
map <C-w>k :res -5<CR>
map <C-w>l :vertical resize +5<CR>
map <C-w>h :vertical resize -5<CR>

" Get off my lawn
nnoremap <Left> :echoe "Use H!"<CR>
nnoremap <Right> :echoe "Use l!"<CR>
nnoremap <Up> :echoe "Use k!"<CR>
nnoremap <Down> :echoe "Use j!"<CR>

" upcase word
nnoremap <Leader>u gUiw

" Automatic Filename expansions for commands
" Directory for current file
cnoremap %% <C-R>=fnameescape(expand('%:h')).'/'<cr>
" Current file name
cnoremap %f <C-R>=fnameescape(expand('%:t'))<cr>
" Full path for current file
cnoremap %a <C-R>=fnameescape(expand('%:p'))<cr>

" Format xml
augroup xml_format
  autocmd!
  autocmd FileType xml setlocal equalprg=xmllint\ --format\ --recover\ -\ 2>/dev/null
augroup END

augroup j2_ft
  au!
  autocmd BufNewFile,BufRead *.html.j2 set filetype=html
augroup END

" Spelling
augroup spell_group
    autocmd!

    autocmd FileType markdown setlocal spell
    autocmd FileType gitcommit setlocal spell
    autocmd FileType pullrequest setlocal spell
    autocmd FileType text setlocal spell
    autocmd FileType ruby setlocal spell

    autocmd BufRead,BufNewFile *.md setlocal spell
augroup END

function! AltCommand(path, vim_command)
  let l:alternate = system("alt " . a:path)
  if empty(l:alternate)
    echo "No alternate file for " . a:path . " exists!"
  else
    exec a:vim_command . " " . l:alternate
  endif
endfunction

" Find the alternate file for the current path and open it
nnoremap <leader>t :w<cr>:call AltCommand(expand('%'), ':e')<cr>

function! EditMacro()
  call inputsave()
  let g:regToEdit = input('Register to edit: ')
  call inputrestore()
  execute "nnoremap <Plug>em :let @" . eval("g:regToEdit") . "='<C-R><C-R>" . eval("g:regToEdit")
endfunction
nmap <Leader>em :call EditMacro()<CR> <Plug>em

let g:far#source = 'ag'

autocmd Filetype cs setlocal ts=4 sw=4 sts=0 expandtab

call plug#begin('$HOME/dotfiles/config/vim/plugged')
source $HOME/dotfiles/config/vim/vimplugins
call plug#end()
augroup NERDtree
  autocmd!
  " Open NERDTree automatically when vim starts on a directory
  autocmd StdinReadPre * let s:std_in=1
  autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists('s:std_in') | exe 'NERDTree' argv()[0] | wincmd p | ene | endif
  " Close NERDTree tab if the only remaining window is NERDTree
  autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
augroup END

" Open and close NERDTree
nnoremap <Leader>f :NERDTreeToggle<Enter>

" Open NERDTree on file I am editing
nnoremap <silent> <Leader>v :NERDTreeFind<CR>

let g:NERDTreeMinimalUI = 1
let g:NERDTreeDirArrows = 1
set noshowmode
set laststatus=2
let g:airline_theme='base16'
let g:airline#extensions#hunks#enabled=0
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#ale#enabled = 0
let g:base16colorspace=256
source ~/.vim/colorscheme.vim
nnoremap <Leader>a :Ag <C-r><C-w><CR>
noremap <silent> <Leader>p :Files<CR>
nmap ; :Buffers<CR>
let g:fzf_layout = { 'down': '~20%' }
let g:fzf_preview_window = []
let g:ale_fix_on_save = 1
let g:airline#extensions#ale#enabled = 0
let g:ale_sign_column_always = 1
let g:ale_set_highlights = 0
let g:ale_lint_delay = 400
let g:ale_fixers = {}
let g:ale_linters = {}
let g:ale_echo_msg_format = '%s [%linter%]'
let g:ale_fix_on_save = 0
