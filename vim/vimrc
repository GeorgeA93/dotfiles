set nocompatible
filetype off
set number " line numbers
set history=1000 " lots of history
set showmode " shows the current mode
set visualbell " turn that bell off
syntax on " Give me highlighting
set autoindent " indents plz
set smartindent
set smarttab
set shiftwidth=2
set autoread " reload files outside of vim
set softtabstop=2
set tabstop=2
set expandtab
set title
set mousehide
set ruler
set backspace=indent,eol,start
set scrolloff=3
set ignorecase " ignore case in searches
set smartcase " unless caps are in the search
set incsearch " search while composing regex
set showcmd " autocomplete commands
set autowrite " always write
set autowriteall
set nobackup " don't write junk files
set foldenable
set foldmethod=indent " don't fold on open
set foldlevel=100
set splitbelow " open new splits to the right and bottom
set splitright
set hlsearch

" Change leader to Space
let mapleader = "\<Space>"

" Cycle through buffers
nnoremap <C-N> :bnext<CR>
nnoremap <C-P> :bprev<CR>

" THEME
colorscheme simplifysimplify-dark

" PLUGINS

call plug#begin('~/.vim/plugged')

Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'rking/ag.vim'
Plug 'tpope/vim-rails'
Plug 'janko-m/vim-test'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

call plug#end()

" Open NERDTree automatically when vim starts on a directory
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif

" Open and close NERDTree
nnoremap <Leader>f :NERDTreeToggle<Enter>

" Open NERDTree on file I am editing
nnoremap <silent> <Leader>v :NERDTreeFind<CR>

" Close NERDTree when I open a file
let NERDTreeQuitOnOpen = 1

" Close NERDTree tab if the only remaining window is NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1

" <Ctrl-l> redraws the screen and removes any search highlighting.
nnoremap <silent> <C-l> :nohl<CR><C-l>
" vim-test
nnoremap <silent> <Leader>g :TestFile<CR>
nnoremap <silent> <Leader>h :TestNearest<CR>
nnoremap <silent> <Leader>j :TestLast<CR>
nnoremap <silent> <Leader>k :TestSuite<CR>
let test#strategy = "iterm"

" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" Get off my lawn
nnoremap <Left> :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up> :echoe "Use k"<CR>
nnoremap <Down> :echoe "Use j"<CR>
